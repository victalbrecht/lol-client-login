const clientWindowControlsRef=document.getElementById("client-window-controls"),draggableClientRef=document.getElementById("client");let pos1=0,pos2=0,pos3=0,pos4=0;const elementDrag=e=>{e.preventDefault(),pos1=pos3-e.clientX,pos2=pos4-e.clientY,pos3=e.clientX,pos4=e.clientY,draggableClientRef.style.top=draggableClientRef.offsetTop-pos2+"px",draggableClientRef.style.left=draggableClientRef.offsetLeft-pos1+"px"},dragMouseDown=e=>{e.preventDefault(),pos3=e.clientX,pos4=e.clientY,document.onmouseup=closeDragElement,document.onmousemove=elementDrag},closeDragElement=()=>{document.onmouseup=null,document.onmousemove=null},setDraggableClient=()=>{clientWindowControlsRef.onmousedown=dragMouseDown};clientWindowControlsRef.onmousedown=dragMouseDown;
const usernameInputRef=document.getElementById("username-input"),passwordInputRef=document.getElementById("password-input"),invalidCharactersSmallRef=document.getElementById("invalid-chars-small"),fewCharactersSmallRef=document.getElementById("few-chars-small"),loginButtonRef=document.getElementById("login-btn"),invalidInputClass="client__input__field--invalid",visibleSmallClass="client__input__small--visible";let validUsername=!1,validPassword=!1;const updateFormSubmitButtonState=()=>{validUsername&&validPassword?loginButtonRef.removeAttribute("disabled"):loginButtonRef.setAttribute("disabled","disabled")},resetAllUsernameValidators=()=>{showUsernameLengthValidator(!1),showUsernamePatternValidator(!1),usernameInputRef.classList.remove(invalidInputClass)},showUsernameLengthValidator=e=>{fewCharactersSmallRef.hidden=!e,e?(usernameInputRef.classList.add(invalidInputClass),fewCharactersSmallRef.classList.add(visibleSmallClass)):fewCharactersSmallRef.classList.remove(visibleSmallClass)},showUsernamePatternValidator=e=>{invalidCharactersSmallRef.hidden=!e,e?(usernameInputRef.classList.add(invalidInputClass),invalidCharactersSmallRef.classList.add(visibleSmallClass)):invalidCharactersSmallRef.classList.remove(visibleSmallClass)},handleUsernameValueChanges=({value:e})=>{if(validUsername=!1,resetAllUsernameValidators(),updateFormSubmitButtonState(),""!==e)return e.length>=2?new RegExp(/^[\w]+$/).test(e)?(validUsername=!0,resetAllUsernameValidators(),void updateFormSubmitButtonState()):(showUsernameLengthValidator(!1),void showUsernamePatternValidator(!0)):(showUsernameLengthValidator(!0),void showUsernamePatternValidator(!1))},handlePasswordValueChanges=({value:e})=>{validPassword=!1,updateFormSubmitButtonState(),""!==e&&(validPassword=!0,updateFormSubmitButtonState())},togglePasswordInputIcon=({classList:e})=>{passwordInputRef.type="password"===passwordInputRef.type?"text":"password",e.toggle("fa-eye")};
const resolutionClientRef=document.getElementById("client"),clientResolutionSelectRef=document.getElementById("client-resolution-select"),resolutions=[{width:1024,height:576,fontSize:11},{width:1280,height:720,fontSize:12},{width:1600,height:900,fontSize:14,default:!0},{width:1920,height:1080,fontSize:15}],handleClientResolutionChanges=({value:t})=>{const e=Number(t);setClientResolution(e)},setClientResolution=t=>{const e=resolutions.find(({width:e})=>e===t),{width:i,height:o,fontSize:n}=e;document.documentElement.style.fontSize=`${n}px`,resolutionClientRef.style.height=`${o}px`,resolutionClientRef.style.width=`${i}px`},setResolutionList=()=>{resolutions.forEach(t=>{const e=document.createElement("option");e.text=`${t.width} x ${t.height}`,e.value=t.width.toString(),clientResolutionSelectRef.options.add(e),t.default&&(setClientResolution(t.width),e.selected=!0)})};resolutions.forEach(t=>{const e=document.createElement("option");e.text=`${t.width} x ${t.height}`,e.value=t.width.toString(),clientResolutionSelectRef.options.add(e),t.default&&(setClientResolution(t.width),e.selected=!0)});